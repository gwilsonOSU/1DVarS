Problem: vanderA eqns for shields parameter boil down to what is
basically a nonlinear system of 2 equations in the two unknowns
k_{s,\delta} and k_{s,w}.  Moreover, the equations involve max/min
functions and piecewise functions.

This is easy enough to solve in the NL model, but need to take care in
the TL version thereof.

---
TL-STRATEGY:

First solve the NL system with fsolve(), then record which branches of
the various equations it took.

Given the branches that the NL solution took, can now pose a
non-branched nonlinear system.  The assumption here is that the
solution is not too close to a branch, so locally this non-branched
system can be used for TL calculations.

For the TL model, on the whiteboard I wrote out the NL system in terms
of two functions:

ksd = F(ksd,ksw,...)
ksw = G(ksd,ksw,...)

where "..." represents other input parameters namely
d50,d90,mu,eta,lambda.

Next (TODO at time of writing), can write out the tangent linear
system by taking derivatives of F and G to form the Jacobian matrix:

tl_ksd = dF/dksd * tl_ksd
        + dF/dksw * tl_ksw
       	+ dF/d50 * tl_d50
	+ ...

where "..." is all the other parameter derivatives.  Similar for
tl_ksw.

By now, we have a linear system of equations, as written in bottom 2
lines of whiteboard 'TLAD_vanderA_shields_notes_v2.jpg'.  This system
can be used for the TL model code.  Then the AD code can be written
fairly simply (TODO at time of writing)
